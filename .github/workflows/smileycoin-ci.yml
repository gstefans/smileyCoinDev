name: SmileyCoin CI build

on:
  workflow_dispatch:
    branches: [ master ]
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ubuntu_no_gui:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libboost-all-dev libssl-dev libtool autoconf pkg-config
    - name: build bdb
      run: ./contrib/install_db4.sh `pwd`
    - name: configure
      run: |
        ./autogen.sh
        export BDB_PREFIX="$(pwd)/db4"
        ./configure --with-gui=no BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" BDB_CFLAGS="-I${BDB_PREFIX}/include"
    - name: make
      run: make

  ubuntu_gui:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libminiupnpc-dev libzmq3-dev libboost-all-dev libssl-dev libtool autoconf pkg-config
        sudo apt-get install -y libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler
    - name: build bdb
      run: ./contrib/install_db4.sh `pwd`
    - name: configure
      run: |
        ./autogen.sh
        export BDB_PREFIX="$(pwd)/db4"
        ./configure BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" BDB_CFLAGS="-I${BDB_PREFIX}/include"
    - name: make
      run: make

  ubuntu_xpile_win:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libtool autotools-dev automake autoconf pkg-config bsdmainutils curl git
        sudo apt-get install -y g++-mingw-w64-x86-64 nsis
    - name: cache depends
      id: cache-depends
      uses: actions/cache@v2
      with:
        path: depends
        key: depends-${{ hashFiles('**/depends/built/x86_64-w64-mingw32/*/*.tar.gz.hash') }}
    - name: compile depends
      run: cd depends && make HOST=x86_64-w64-mingw32
    - name: configure
      run: |
        ./autogen.sh
        CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/
    - name: make
      run: |
        make
        export PACKAGE_VERSION=$(grep PACKAGE_VERSION src/bitcoin-config.h | awk '{gsub(/"/,""); print $3}')
        echo "SMLY_PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
    - name: make deploy
      run: |
        make deploy
        sha256sum smileycoin-$SMLY_PACKAGE_VERSION-win64-setup.exe > SHA256
    - name: upload installer
      uses: actions/upload-artifact@v2
      with:
        name: smileycoin-${{ env.SMLY_PACKAGE_VERSION }}-win64-setup
        path: |
          ${{ github.workspace }}/smileycoin-${{ env.SMLY_PACKAGE_VERSION }}-win64-setup.exe
          ${{ github.workspace }}/SHA256
